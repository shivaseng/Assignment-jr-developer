const http = require('http');
const axios = require('axios');
async function getTimeStories() {
    try {
        const response = await axios.get('https://time.com');
        const html = response.data;
        const startMarker = '<ul class="latest-stories">';
        const endMarker = '</ul>';
        const startIdx = html.indexOf(startMarker) + startMarker.length;
        const endIdx = html.indexOf(endMarker, startIdx);
        const storiesSection = html.substring(startIdx, endIdx);
        const stories = [];
        const storyItems = storiesSection.split('<li>');

        for (let i = 1; i < storyItems.length && stories.length < 6; i++) {
            const item = storyItems[i];
            const linkStart = item.indexOf('<a href="') + '<a href="'.length;
            const linkEnd = item.indexOf('"', linkStart);
            const link = item.substring(linkStart, linkEnd);
            const titleStart = item.indexOf('>', linkEnd) + 1;
            const titleEnd = item.indexOf('</a>', titleStart);
            const title = item.substring(titleStart, titleEnd).trim();
            stories.push({
                title: title,
                link: `https://time.com${link}`
            });
        }
        return stories;
    } catch (error) {
        console.error('Error fetching or parsing data:', error);
        return [];
    }
}
const server = http.createServer(async (req, res) => {
    if (req.method === 'GET' && req.url === '/getTimeStories') {
        const stories = await getTimeStories();
        res.writeHead(200, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify(stories));
    } else {
        res.writeHead(404, { 'Content-Type': 'text/plain' });
        res.end('Not Found');
    }
});

const port = 3000;
server.listen(port, () => {
    console.log(`Server is listening on port ${port}`);
});
